@model SearchResultViewModel<OrganisationListViewModel>;
@{
    ViewData["Title"] = "Find a regulated awarding organisation";
    var currentPage = Model.List.CurrentPage;
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds-from-desktop">

        <h1 class="govuk-heading-m">Search results – '@Model.Name'</h1>

        <div class="app-search govuk-!-margin-bottom-4">
            <form action="SearchResults" method="get" novalidate="">
                <div class="govuk-form-group">
                    <label class="govuk-label app-search__label govuk-label--s" for="keywords">
                        Search for an organisation
                    </label>
                    <input class="govuk-input app-search__input" id="name" name="name" type="search" value="@Model.Name">
                    <input hidden id="page" name="page" type="number" value="1" />
                </div>
                <button class="govuk-button app-search__button" data-module="govuk-button">
                    Search
                </button>
            </form>
        </div>

        @if (Model.List.Results == null || !Model.List.Results.Any())
        {
            <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
            <h2 class="govuk-heading-s">No results</h2>
            <p class="govuk-body-m">No search results found. Try a searching for something different.</p>
        }
        else
        {
            <a href="DownloadCSV?name=@Model.Name" role="button" draggable="false" class="govuk-button govuk-button--secondary" data-module="govuk-button">
                Download results as CSV
            </a>

            <ul class="govuk-list govuk-list--spaced">

                @foreach (var item in Model.List.Results!)
                {
                    <li class="results-list-item">
                        <p class="govuk-body-!-margin-top-2">
                            <a class="govuk-link govuk-link--no-underline govuk-body govuk-!-font-weight-bold" href="@item.RecognitionNumber">@item.Name</a><br>
                            <span class="govuk-body-s">@item.Acronym</span>
                        </p>
                        <div class="govuk-grid-row">
                            <div class="govuk-grid-column-one-quarter">Ofqual status: </div>
                            <div class="govuk-grid-column-one-half">
                                @switch (item.OfqualOrganisationStatus?.ToLower())
                                {
                                    case "surrendered":
                                        <strong class="govuk-tag govuk-tag--purple">
                                            Surrendered
                                        </strong>
                                        break;
                                    case "withdrawn":
                                        <strong class="govuk-tag govuk-tag--blue">
                                            Withdrawn
                                        </strong>
                                        break;
                                    case "recognised":
                                        <strong class="govuk-tag govuk-tag--green">
                                            Recognised
                                        </strong>
                                        break;
                                    case "Never been recognised":
                                        <strong class="govuk-tag govuk-tag--grey">
                                            Never recognised
                                        </strong>
                                        break;
                                    default:
                                        break;
                                }
                            </div>
                        </div>
                        <div class="govuk-grid-row">
                            <div class="govuk-grid-column-one-quarter">CCEA status: </div>
                            <div class="govuk-grid-column-one-half">
                                @switch (item.OfqualOrganisationStatus?.ToLower())
                                {
                                    case "surrendered":
                                        <strong class="govuk-tag govuk-tag--purple">
                                            Surrendered
                                        </strong>
                                        break;
                                    case "withdrawn":
                                        <strong class="govuk-tag govuk-tag--blue">
                                            Withdrawn
                                        </strong>
                                        break;
                                    case "recognised":
                                        <strong class="govuk-tag govuk-tag--green">
                                            Recognised
                                        </strong>
                                        break;
                                    case "never been recognised":
                                        <strong class="govuk-tag govuk-tag--grey">
                                            Never recognised
                                        </strong>
                                        break;
                                    default:
                                        break;
                                }
                            </div>
                        </div>
                        <p></p>
                    </li>
                }

            </ul>

            <nav class="govuk-pagination" role="navigation" aria-label="Pagination">
                <ul class="govuk-pagination__list">
                    @if (currentPage > 1)
                    {
                        <div class="govuk-pagination__prev">
                            <a class="govuk-link govuk-pagination__link" href="@Model.PagingURL!.Replace("||_page_||", (currentPage-1).ToString())" rel="prev">
                                <svg class="govuk-pagination__icon govuk-pagination__icon--prev" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
                                    <path d="m6.5938-0.0078125-6.7266 6.7266 6.7441 6.4062 1.377-1.449-4.1856-3.9768h12.896v-2h-12.984l4.2931-4.293-1.414-1.414z"></path>
                                </svg>
                                <span class="govuk-pagination__link-title">
                                    Previous<span class="govuk-visually-hidden"> page</span>
                                </span>
                            </a>
                        </div>
                    }
                    @foreach (var item in Model.PagingList!)
                    {
                        var ariaCurrent = currentPage == item ? "aria-current='page'" : "";
                        var currentItem = currentPage == item ? "govuk-pagination__item--current" : "";

                        if (item >0)
                        {
                            <li class="govuk-pagination__item @currentItem">
                                <a class="govuk-link govuk-pagination__link" href="@Model.PagingURL!.Replace("||_page_||", item.ToString())" aria-label="Page @item" @ariaCurrent>
                                    @item
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="govuk-pagination__item govuk-pagination__item--ellipses">
                                ⋯
                            </li>
                        }
                    }

                    @if (currentPage < Model.PagingList.Max())
                    {
                        <div class="govuk-pagination__next">
                            <a class="govuk-link govuk-pagination__link" href="@Model.PagingURL!.Replace("||_page_||", (currentPage+1).ToString())" rel="next">
                                <span class="govuk-pagination__link-title">Next<span class="govuk-visually-hidden"> page</span></span>
                                <svg class="govuk-pagination__icon govuk-pagination__icon--next" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
                                    <path d="m8.107-0.0078125-1.4136 1.414 4.2926 4.293h-12.986v2h12.896l-4.1855 3.9766 1.377 1.4492 6.7441-6.4062-6.7246-6.7266z"></path>
                                </svg>
                            </a>
                        </div>
                    }
@* 
                    @{
                        var pages = Model.List.Count / Model.List.Limit;

                        //for the last page if needed
                        pages = Model.List.Count % Model.List.Limit > 0 ? pages + 1 : pages;

                        var last = pages;
                    }
                    @if (currentPage > 1)
                    {
                        <div class="govuk-pagination__prev">
                            <a class="govuk-link govuk-pagination__link" href="@Model.PagingURL!.Replace("||_page_||", (currentPage-1).ToString())" rel="prev">
                                <svg class="govuk-pagination__icon govuk-pagination__icon--prev" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
                                    <path d="m6.5938-0.0078125-6.7266 6.7266 6.7441 6.4062 1.377-1.449-4.1856-3.9768h12.896v-2h-12.984l4.2931-4.293-1.414-1.414z"></path>
                                </svg>
                                <span class="govuk-pagination__link-title">
                                    Previous<span class="govuk-visually-hidden"> page</span>
                                </span>
                            </a>
                        </div>
                    }
                    
                    @for (int i = 1; i <= pages; i++)
                    {
                        var ariaCurrent = currentPage == i ? "aria-current='page'" : "";
                        var currentItem = currentPage == i ? "govuk-pagination__item--current" : "";

                        <li class="govuk-pagination__item @currentItem">
                            <a class="govuk-link govuk-pagination__link" href="@Model.PagingURL!.Replace("||_page_||", i.ToString())" aria-label="Page @i" @ariaCurrent>
                                @i
                            </a>
                        </li>
                    } *@

                    @*
                <li class="govuk-pagination__item">
                <a class="govuk-link govuk-pagination__link" href="@Model.PagingURL!.Replace("||_page_||", pages.ToString())" aria-label="Page @pages">
                @pages
                </a>
                </li> *@
                </ul>
                
            </nav>
        }


    </div>
</div>